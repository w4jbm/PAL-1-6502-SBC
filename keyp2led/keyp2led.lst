
; 64tass Turbo Assembler Macro V1.55.2200 listing file
; 64tass --intel-hex -o keyp2led.hex -m --verbose-list -L keyp2led.lst keyp2led.a65
; Mon Sep 12 12:34:22 2022

;Offset	;Hex		;Source

;******  Processing input file: keyp2led.a65

			; This program will display whatever is typed on the keypad
			; to the PAL-1's LEDs
			;
			; By Jim McClanahan, W4JBM, Sept 2022
			;
			; Build with:
			; $ 64tass --intel-hex keyp2led.a65 -o keyp2led.hex -m --verbose-list -L keyp2led.lst
			; $ srec_cat keyp2led.hex -intel -o keyp2led.mos -MOS_Technologies
			; $ unix2dos keyp2led.mos
			; $ cp keyp2led.mos ~

			; Set the Page Zero locations for digits 12, 34, and 56...
=$fb			dig12      = $fb
=$fa			dig34      = $fa
=$f9			dig56      = $f9

			; We need a temporary storage location
=$fd			tmpx     = $fd

			; We will use the SCAND routine in ROM to display the values
=$1f1f			scand      = $1f1f

			; and the GETKEY routine to poll the keyboard
=$1f6a			getkey     = $1f6a


			*          = $0200

.0200	d8		init:      cld             ; Always clear decimal
.0201	a9 00		           lda #$00        ; Clear the display
.0203	85 fb		           sta dig12
.0205	85 fa		           sta dig34
.0207	85 f9		           sta dig56

.0209	20 1f 1f	loop:      jsr scand       ; Light up the LEDs

.020c	20 6a 1f	           jsr getkey      ; Scan the keypad
.020f	c9 15		           cmp #$15        ; Was anything pressed?
.0211	f0 f6		           beq loop        ; If not, loop...

.0213	c9 10		           cmp #$10        ; Is it a (hex) digit?
.0215	b0 52		           bcs functn      ; If not, process as a function

.0217	85 fd		           sta tmpx        ; Store A for later

.0219	18		bitshft1:  clc             ; Shift bits up through the...
.021a	a5 f9		           lda dig56       ; one...
.021c	2a		           rol a
.021d	85 f9		           sta dig56

.021f	a5 fa		           lda dig34       ; two...
.0221	2a		           rol a
.0222	85 fa		           sta dig34

.0224	a5 fb		           lda dig12       ; three bytes
.0226	2a		           rol a
.0227	85 fb		           sta dig12

.0229	18		bitshft2:  clc             ; Shift bits up through the...
.022a	a5 f9		           lda dig56       ; one...
.022c	2a		           rol a
.022d	85 f9		           sta dig56

.022f	a5 fa		           lda dig34       ; two...
.0231	2a		           rol a
.0232	85 fa		           sta dig34

.0234	a5 fb		           lda dig12       ; three bytes
.0236	2a		           rol a
.0237	85 fb		           sta dig12

.0239	18		bitshft3:  clc             ; Shift bits up through the...
.023a	a5 f9		           lda dig56       ; one...
.023c	2a		           rol a
.023d	85 f9		           sta dig56

.023f	a5 fa		           lda dig34       ; two...
.0241	2a		           rol a
.0242	85 fa		           sta dig34

.0244	a5 fb		           lda dig12       ; three bytes
.0246	2a		           rol a
.0247	85 fb		           sta dig12

.0249	18		bitshft4:  clc             ; Shift bits up through the...
.024a	a5 f9		           lda dig56       ; one...
.024c	2a		           rol a
.024d	85 f9		           sta dig56

.024f	a5 fa		           lda dig34       ; two...
.0251	2a		           rol a
.0252	85 fa		           sta dig34

.0254	a5 fb		           lda dig12       ; three bytes
.0256	2a		           rol a
.0257	85 fb		           sta dig12

.0259	a5 fd		newnum:    lda tmpx        ; Now add the new number to the...
.025b	05 f9		           ora dig56       ; ...last nibble of dig56
.025d	85 f9		           sta dig56

.025f	20 6a 1f	wait:      jsr getkey      ; Assembly code blazes, so we keep
.0262	c5 fd		           cmp tmpx        ; checking which key is pressed until
.0264	f0 f9		           beq wait        ; it changes before we loop back
.0266	4c 09 02	           jmp loop


.0269	ea		functn:    nop             ; We get here if a non-numberic key was pressed
.026a	4c 09 02	           jmp loop        ; ...for now, just loop

;******  End of listing
